(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{510:function(e,t,n){"use strict";n.r(t);var r={name:"p5tutorial4.vue",components:{LinkItem:function(){return n.e(0).then(n.bind(null,440))},Code:function(){return n.e(4).then(n.bind(null,441))},Canvas:function(){return n.e(7).then(n.bind(null,515))},MiniPage:function(){return n.e(5).then(n.bind(null,442))},Paragraph:function(){return n.e(6).then(n.bind(null,443))},Header:function(){return Promise.all([n.e(3),n.e(2)]).then(n.bind(null,444))},Footer:function(){return n.e(1).then(n.bind(null,445))},Pet:function(){return n.e(8).then(n.bind(null,516))}},head:function(){return{title:"p5.js チュートリアル 4",meta:[{hid:"description",name:"description",content:"キーボード入力を利用した p5.js のプログラムの作り方"},{hid:"keyword",name:"keyword",content:"p5.js,javascript,アニメーション,キーボード入力"},{hid:"og:type",property:"og:type",content:"article"},{hid:"og:title",property:"og:title",content:"p5.js チュートリアル 4"},{hid:"og:description",property:"og:description",content:"キーボード入力を利用した p5.js のプログラムの作り方"},{hid:"og:url",property:"og:url",content:"https://misteltein.github.io/midnight-coffee/p5tutorials/p5tutorial4"},{hid:"og:image",property:"og:image",content:"https://misteltein.github.io/midnight-coffee/images/secret_cat.png"}]}}},l=n(53),component=Object(l.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("Header"),e._v(" "),n("Pet"),e._v(" "),n("h1",[e._v("p5.js チュートリアル 4")]),e._v(" "),n("MiniPage",[n("Paragraph",[e._v("\n      これはキーボード操作を取り入れるためのチュートリアルである。\n    ")]),e._v(" "),n("Paragraph",[e._v("\n      キーを押したときに１度だけ実行される keyTyped() と keyPressed()，\n      さらに放した時に実行される keyReleased() がある。\n    ")])],1),e._v(" "),n("h2",[e._v("keyTyped")]),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[e._v("\n      キーが押されたとき，keyTyped() という関数が１度だけ実行される。\n      keyTyped() がどのキーを押されて呼ばれたのかは key という変数に保存されている。\n    ")]),e._v(" "),n("Paragraph",[e._v("\n      この key を使って条件分岐させることで，様々な機能をキーに対応させることができる。\n    ")]),e._v(" "),n("Paragraph",[e._v("\n      例えば，q を押したときに円を描いて，w を押した時に消すプログラムは，\n      "),n("Code",{attrs:{url:"/codes/p5tutorials/p5tutorial4/key_typed.js",language:"javascript",title:"key_typed.js: コード"}}),e._v("\n      のように書くことができる。\n    ")],1),e._v(" "),n("h3",[e._v("keyTyped の注意")]),e._v(" "),n("Paragraph",[n("ul",[n("li",[e._v("key は Backspace, Delete, Ctrl, Shift, Alt に対応していない。")]),e._v(" "),n("li",[e._v("パソコンの設定によっては押し続けている間に何度も実行されることがある。")]),e._v(" "),n("li",[e._v("ブラウザ独自の振る舞いを避けるために最後に return false と書いておくことが推奨されている。")]),e._v(" "),n("li",[e._v("複数のキーに対応する処理を書くことに適していない。")])])])],1),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[n("Canvas",{attrs:{title:"key_typed.js: 出力",file:"p5Tutorial/IVa.js",width:"300px",height:"300px"}}),e._v("\n      グレーの部分を 1 回クリックしてから q や w を押す。\n    ")],1)],1),e._v(" "),n("h2",[e._v("keyPressed")]),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[e._v("\n      キーが押されたとき，keyPressed() という関数も 1 度だけ実行される。\n      アルファベットや数字以外のキーを場合に使うことが多い。\n      keyCode という変数として押されたキーに対応するコード（整数, keyCode）が\n      が渡される。これを利用してキーが押された時の処理を実装する。\n    ")])],1),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("h3",{staticStyle:{"margin-top":"0.5rem"}},[e._v("keyCode")]),e._v(" "),n("Paragraph",[e._v("\n      keyCode である整数を覚えて使うことは不便なため，それぞれのコードには別名が用意されている:\n      BACKSPACE, DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL, OPTION, ALT, UP_ARROW, DOWN_ARROW, LEFT_ARROW,\n      RIGHT_ARROW.\n    ")])],1),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[e._v("\n      例えば円を，左向き矢印（LEFT_ARROW）が押されたら左へ，\n      右向き矢印（RIGHT_ARROW）が押されたら右へ動かすとき，\n      "),n("Code",{attrs:{url:"/codes/p5tutorials/p5tutorial4/key_pressed.js",language:"javascript",title:"key_pressed.js: コード"}}),e._v("\n      のように書く。\n    ")],1)],1),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("h3",[e._v("注意")]),e._v(" "),n("Paragraph",[n("ul",[n("li",[e._v("keyCode は大文字・小文字の区別がつかないので，アルファベットには適さない。")]),e._v(" "),n("li",[e._v("パソコンの設定によっては押し続けている間に何度も実行されることがある。")]),e._v(" "),n("li",[e._v("ブラウザ独自の振る舞いを避けるために最後に return false と書いておくことが推奨されている。")]),e._v(" "),n("li",[e._v("複数のキーに対応する処理を書くことに適していない。")])])]),e._v(" "),n("Paragraph",[n("Canvas",{attrs:{title:"key_pressed.js: 出力",file:"p5Tutorial/IVb.js",width:"300px",height:"300px"}}),e._v("\n      グレーの部分をクリックしてから左右それぞれのの矢印キーを押す。\n    ")],1)],1),e._v(" "),n("h2",[e._v("keyReleased")]),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[e._v("\n      keyReleased() は，キーが離されたときに実行される関数である。\n      どのキーが押されたかどうかは，key または keyCode の値を使って判定できる。\n    ")]),e._v(" "),n("Paragraph",[e._v("\n      keyPressed() と keyReleased() を一緒に使うことで，キーが押された状態なのか判別することができる。\n      以下のプログラムでは downLeftArrow などとして押されていれば true になる変数を作り，\n      それを更新することでキーが押された状態を表している。\n      "),n("Code",{attrs:{url:"/codes/p5tutorials/p5tutorial4/key_released.js",language:"javascript",title:"key_released.js: コード"}})],1)],1),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[n("Canvas",{attrs:{title:"key_released.js: 出力",file:"p5Tutorial/IVd.js",width:"300px",height:"300px"}}),e._v("\n      グレーの部分をクリックしてから上下左右の矢印キーを押す。\n      押された矢印の方向の円が赤くなる。\n      2 つのキーを同時に押すことができるが，3 つ以上はシステムの都合によりできない場合がある。\n    ")],1)],1),e._v(" "),n("h2",[e._v("keyIsDown")]),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[e._v("\n      keyIsDown() は，引数として与えた keyCode に対応するキーが\n      押されているかどうかを調べて真偽値 (true / false) を返す関数ある。\n    ")]),e._v(" "),n("Paragraph",[e._v("\n      これを利用して，キーを押した時だけでなく，押している間ずっと行われる処理を書くことができる。\n      "),n("Code",{attrs:{url:"/codes/p5tutorials/p5tutorial4/key_is_down.js",language:"javascript",title:"key_is_down.js: コード"}})],1)],1),e._v(" "),n("MiniPage",{attrs:{type:"half"}},[n("Paragraph",[n("Canvas",{attrs:{title:"key_is_down.js: 出力",file:"p5Tutorial/IVe.js",width:"300px",height:"300px"}}),e._v("\n      グレーの部分をクリックしてから上下左右の矢印キーを押す。\n    ")],1)],1),e._v(" "),n("Footer")],1)}),[],!1,null,"4d4f666c",null);t.default=component.exports}}]);